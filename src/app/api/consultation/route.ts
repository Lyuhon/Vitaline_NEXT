// // src/app/api/consultation/route.ts

// import { NextResponse } from 'next/server';

// // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à –±–æ—Ç-—Ç–æ–∫–µ–Ω –∏ chat_id
// const BOT_TOKEN = "7891057087:AAH2c1jOUna7ioHg0AUXzH_ih3fndMr8bDY";
// const CHAT_ID = "-4669675964";

// export async function POST(request: Request) {
//     try {
//         const data = await request.json();
//         const { phone, page_url } = data;

//         // –í–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö
//         if (!phone || !page_url) {
//             return NextResponse.json({ success: false, message: '–ù–µ–≤–µ—Ä–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ.' }, { status: 400 });
//         }

//         // –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
//         const message = `
// üìã *–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é*

// *–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:* ${phone}
// *–°—Ç—Ä–∞–Ω–∏—Ü–∞:* [–ü–µ—Ä–µ–π—Ç–∏](${page_url})
//         `;

//         // –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram
//         const telegramResponse = await fetch(`https://api.telegram.org/bot${BOT_TOKEN}/sendMessage`, {
//             method: 'POST',
//             headers: {
//                 'Content-Type': 'application/json',
//             },
//             body: JSON.stringify({
//                 chat_id: CHAT_ID,
//                 text: message,
//                 parse_mode: 'Markdown',
//             }),
//         });

//         const telegramResult = await telegramResponse.json();

//         if (telegramResult.ok) {
//             return NextResponse.json({ success: true, message: '–ó–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞.' });
//         } else {
//             console.error('Telegram API Error:', telegramResult);
//             return NextResponse.json({ success: false, message: '–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞—è–≤–∫–∏ –≤ Telegram.' }, { status: 500 });
//         }

//     } catch (error: any) {
//         console.error('API Route Error:', error);
//         return NextResponse.json({ success: false, message: '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞.' }, { status: 500 });
//     }
// }


// src/app/api/consultation/route.ts

import { NextResponse } from 'next/server';

// –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à –±–æ—Ç-—Ç–æ–∫–µ–Ω –∏ chat_id
const BOT_TOKEN = "7891057087:AAH2c1jOUna7ioHg0AUXzH_ih3fndMr8bDY";
const CHAT_ID = "-4669675964";

export async function POST(request: Request) {
    try {
        const data = await request.json();
        const { phone, page_url } = data;

        console.log("–ü–æ–ª—É—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:", data); // –î–ª—è –æ—Ç–ª–∞–¥–∫–∏

        // –í–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö
        if (!phone || !page_url) {
            return NextResponse.json({ success: false, message: '–ù–µ–≤–µ—Ä–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ.' }, { status: 400 });
        }

        // –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
        const message = `
üìã *–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é*

*–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:* ${phone}
        `;

        console.log("–û—Ç–ø—Ä–∞–≤–ª—è–µ–º–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:", message); // –î–ª—è –æ—Ç–ª–∞–¥–∫–∏

        // –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram
        const telegramResponse = await fetch(`https://api.telegram.org/bot${BOT_TOKEN}/sendMessage`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({
                chat_id: CHAT_ID,
                text: message,
                parse_mode: 'Markdown',
            }),
        });

        const telegramResult = await telegramResponse.json();

        console.log("–û—Ç–≤–µ—Ç Telegram API:", telegramResult); // –î–ª—è –æ—Ç–ª–∞–¥–∫–∏

        if (telegramResult.ok) {
            return NextResponse.json({ success: true, message: '–ó–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞.' });
        } else {
            console.error('Telegram API Error:', telegramResult);
            return NextResponse.json({ success: false, message: '–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞—è–≤–∫–∏ –≤ Telegram.' }, { status: 500 });
        }

    } catch (error: any) {
        console.error('API Route Error:', error);
        return NextResponse.json({ success: false, message: '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞.' }, { status: 500 });
    }
}
